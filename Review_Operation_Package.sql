-- Package Specification
CREATE OR REPLACE PACKAGE review_pkg AS
    -- Procedure to add a review, assuming the review table and required columns exist
    PROCEDURE add_review(
        p_user_id NUMBER,
        p_dorm_id NUMBER,
        p_room_type VARCHAR2,
        p_room_score NUMBER,
        p_environment_score NUMBER,
        p_location_score NUMBER,
        p_facility_score NUMBER,
        p_comment_text CLOB,
        p_review_time TIMESTAMP
    );

    -- Function to calculate average score, assuming the review table and room_overall_score column exist
    FUNCTION calculate_average_score(p_dorm_id NUMBER) RETURN NUMBER;
END review_pkg;
/

-- Package Body
CREATE OR REPLACE PACKAGE BODY review_pkg AS

    -- Implementation of the procedure to add a review
    PROCEDURE add_review(
        p_user_id NUMBER,
        p_dorm_id NUMBER,
        p_room_type VARCHAR2,
        p_room_score NUMBER,
        p_environment_score NUMBER,
        p_location_score NUMBER,
        p_facility_score NUMBER,
        p_comment_text CLOB,
        p_review_time TIMESTAMP
    ) AS
    BEGIN
        -- Insert into the review table, assuming the sequence review_seq exists for generating review_id
        INSERT INTO review (
            review_id, user_id, dorm_id, room_type, room_overall_score, environment_score, 
            location_overall_score, facility_overall_score, comment_text, review_time
        ) VALUES (
            review_seq.NEXTVAL, -- Unique ID generated by the sequence
            p_user_id, p_dorm_id, p_room_type, p_room_score, p_environment_score, 
            p_location_score, p_facility_score, p_comment_text, p_review_time
        );
    END;

    -- Implementation of the function to calculate average score
    FUNCTION calculate_average_score(p_dorm_id NUMBER) RETURN NUMBER AS
        l_average_score NUMBER;
    BEGIN
        -- Calculate average of room_overall_score from reviews for a specific dorm
        SELECT AVG(room_overall_score) INTO l_average_score
        FROM review
        WHERE dorm_id = p_dorm_id;

        RETURN l_average_score;
    END;

END review_pkg;
/

SELECT increment_by FROM user_sequences WHERE sequence_name = 'REVIEW_SEQ';

SET SERVEROUTPUT ON;






BEGIN
    review_pkg.add_review(
        p_user_id => 1,
        p_dorm_id => 4,
        p_room_type => 'Single',
        p_room_score => 8,
        p_environment_score => 7,
        p_location_score => 9,
        p_facility_score => 8,
        p_comment_text => 'Great room with excellent amenities!',
        p_review_time => SYSTIMESTAMP
    );
    DBMS_OUTPUT.PUT_LINE('Review added successfully.');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error adding review: ' || SQLERRM);
END;
/



SELECT *
FROM review;



